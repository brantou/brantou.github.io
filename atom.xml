<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Brantou的日常</title>
  
  <subtitle>二三事</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://brantou.github.io/"/>
  <updated>2018-03-01T14:01:51.080Z</updated>
  <id>https://brantou.github.io/</id>
  
  <author>
    <name>Brantou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式--探索rx宏</title>
    <link href="https://brantou.github.io/2018/03/01/regular-expression/"/>
    <id>https://brantou.github.io/2018/03/01/regular-expression/</id>
    <published>2018-02-28T16:00:00.000Z</published>
    <updated>2018-03-01T14:01:51.080Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;blockquote&gt;
&lt;p&gt;
原文地址: &lt;a href=&quot;http://francismurillo.github.io/2017-03-30-Exploring-Emacs-rx-Macro/&quot; rel=&quot;external nofollow noopener nore
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="elisp" scheme="https://brantou.github.io/tags/elisp/"/>
    
      <category term="tools" scheme="https://brantou.github.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>Go实现鼓励金发放逻辑</title>
    <link href="https://brantou.github.io/2018/01/26/go-imp-ecrg/"/>
    <id>https://brantou.github.io/2018/01/26/go-imp-ecrg/</id>
    <published>2018-01-25T16:00:00.000Z</published>
    <updated>2018-01-29T10:23:54.005Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
  什么是鼓励金？我想大家应该都有用过，例如今早我买包子时，就抵扣了部分金额。
用支付宝或者微信支付，支付成功后会返还一小笔钱，从周日到周四累计5天，然后在周五和周六抵现金使用，
这笔钱就是鼓励金(当然支付宝称作奖励金)。
我们现在几乎每天都在使用支付宝或者微信，每天
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>tmux自动化</title>
    <link href="https://brantou.github.io/2017/12/18/tmux-script/"/>
    <id>https://brantou.github.io/2017/12/18/tmux-script/</id>
    <published>2017-12-17T16:00:00.000Z</published>
    <updated>2018-01-17T07:20:27.980Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;div class=&quot;org-src-container&quot;&gt;

&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="tool" scheme="https://brantou.github.io/tags/tool/"/>
    
      <category term="tmux" scheme="https://brantou.github.io/tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>GDB-UI试用</title>
    <link href="https://brantou.github.io/2017/12/09/gdb-ui-just-try/"/>
    <id>https://brantou.github.io/2017/12/09/gdb-ui-just-try/</id>
    <published>2017-12-08T16:00:00.000Z</published>
    <updated>2017-12-11T05:54:58.642Z</updated>
    
    <summary type="html">
    
      
      
        


&lt;div id=&quot;outline-container-org2f8337e&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2f8337e&quot;&gt;&lt;a id=&quot;ID-bdb82cb2-9f8f-4fe4-be8f-ea5afb0a9db6&quot;&gt;&lt;/a&gt;&lt;span c
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="tools" scheme="https://brantou.github.io/tags/tools/"/>
    
      <category term="gdb" scheme="https://brantou.github.io/tags/gdb/"/>
    
      <category term="emacs" scheme="https://brantou.github.io/tags/emacs/"/>
    
      <category term="debug" scheme="https://brantou.github.io/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>go-dlv试用</title>
    <link href="https://brantou.github.io/2017/12/09/go-dlv-try/"/>
    <id>https://brantou.github.io/2017/12/09/go-dlv-try/</id>
    <published>2017-12-08T16:00:00.000Z</published>
    <updated>2017-12-10T08:57:05.081Z</updated>
    
    <summary type="html">
    
      
      
        


&lt;div id=&quot;outline-container-orgab0c325&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgab0c325&quot;&gt;&lt;a id=&quot;ID-1c90dda7-ff8f-43e7-9934-0d7c67e1c0c3&quot;&gt;&lt;/a&gt;&lt;span c
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="tools" scheme="https://brantou.github.io/tags/tools/"/>
    
      <category term="emacs" scheme="https://brantou.github.io/tags/emacs/"/>
    
      <category term="debug" scheme="https://brantou.github.io/tags/debug/"/>
    
      <category term="dlv" scheme="https://brantou.github.io/tags/dlv/"/>
    
  </entry>
  
  <entry>
    <title>Emacs支持gomodifytags</title>
    <link href="https://brantou.github.io/2017/12/05/emacs-go-tag/"/>
    <id>https://brantou.github.io/2017/12/05/emacs-go-tag/</id>
    <published>2017-12-04T16:00:00.000Z</published>
    <updated>2017-12-08T04:31:26.879Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
受到&lt;a href=&quot;http://www.jianshu.com/p/20b533c5c3f9&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;《Go 终极指南：编写一个 Go 工具》&lt;/a&gt;
      
    
    </summary>
    
      <category term="emacs-plugin" scheme="https://brantou.github.io/categories/emacs-plugin/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="emacs-plugin" scheme="https://brantou.github.io/tags/emacs-plugin/"/>
    
      <category term="elisp" scheme="https://brantou.github.io/tags/elisp/"/>
    
      <category term="tools" scheme="https://brantou.github.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>Go语言不完全工具列表</title>
    <link href="https://brantou.github.io/2017/11/24/go-tool/"/>
    <id>https://brantou.github.io/2017/11/24/go-tool/</id>
    <published>2017-11-23T16:00:00.000Z</published>
    <updated>2017-12-13T10:24:52.226Z</updated>
    
    <summary type="html">
    
      
      
        


&lt;div id=&quot;outline-container-org9744b49&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org9744b49&quot;&gt;&lt;a id=&quot;ID-1da2b186-ec5a-4c33-87fc-4edd8cdc60ff&quot;&gt;&lt;/a&gt;&lt;span c
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="tool" scheme="https://brantou.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>gomodifytags</title>
    <link href="https://brantou.github.io/2017/11/07/go-modify-tags/"/>
    <id>https://brantou.github.io/2017/11/07/go-modify-tags/</id>
    <published>2017-11-06T16:00:00.000Z</published>
    <updated>2017-11-09T07:00:31.890Z</updated>
    
    <summary type="html">
    
      
      
        


&lt;div id=&quot;outline-container-org24b6d06&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org24b6d06&quot;&gt;&lt;a id=&quot;ID-27719462-7684-42eb-a615-d34c2696f4b2&quot;&gt;&lt;/a&gt;&lt;span c
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="tool" scheme="https://brantou.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>org-babel有趣的事</title>
    <link href="https://brantou.github.io/2017/10/31/literate-devOps/"/>
    <id>https://brantou.github.io/2017/10/31/literate-devOps/</id>
    <published>2017-10-30T16:00:00.000Z</published>
    <updated>2017-12-05T15:20:29.486Z</updated>
    
    <summary type="html">
    
      
      
        


&lt;div id=&quot;outline-container-org23ec5dd&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org23ec5dd&quot;&gt;&lt;a id=&quot;ID-971ec1fe-4655-44a8-bf63-812a49eea408&quot;&gt;&lt;/a&gt;&lt;span c
      
    
    </summary>
    
      <category term="org-mode" scheme="https://brantou.github.io/categories/org-mode/"/>
    
    
      <category term="org-mode" scheme="https://brantou.github.io/tags/org-mode/"/>
    
      <category term="babel" scheme="https://brantou.github.io/tags/babel/"/>
    
      <category term="active-code" scheme="https://brantou.github.io/tags/active-code/"/>
    
      <category term="literate-programming" scheme="https://brantou.github.io/tags/literate-programming/"/>
    
      <category term="devOps" scheme="https://brantou.github.io/tags/devOps/"/>
    
  </entry>
  
  <entry>
    <title>写Python的新方式</title>
    <link href="https://brantou.github.io/2017/08/30/ob-python-intro/"/>
    <id>https://brantou.github.io/2017/08/30/ob-python-intro/</id>
    <published>2017-08-29T16:00:00.000Z</published>
    <updated>2017-08-31T14:25:35.299Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;blockquote&gt;
&lt;p&gt;
Org mode is for keeping notes, maintaining TODO lists, planning projects,
and authoring documents with a fast and effecti
      
    
    </summary>
    
      <category term="org-mode" scheme="https://brantou.github.io/categories/org-mode/"/>
    
    
      <category term="tutorial" scheme="https://brantou.github.io/tags/tutorial/"/>
    
      <category term="org-mode" scheme="https://brantou.github.io/tags/org-mode/"/>
    
      <category term="babel" scheme="https://brantou.github.io/tags/babel/"/>
    
      <category term="active-code" scheme="https://brantou.github.io/tags/active-code/"/>
    
      <category term="literate-programming" scheme="https://brantou.github.io/tags/literate-programming/"/>
    
      <category term="python" scheme="https://brantou.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>玩转词云</title>
    <link href="https://brantou.github.io/2017/08/25/python-jieba-wordcloud/"/>
    <id>https://brantou.github.io/2017/08/25/python-jieba-wordcloud/</id>
    <published>2017-08-24T16:00:00.000Z</published>
    <updated>2017-08-31T15:13:54.547Z</updated>
    
    <summary type="html">
    
      
      
        


&lt;div id=&quot;outline-container-orgf71ca50&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgf71ca50&quot;&gt;&lt;a id=&quot;ID-681fffd0-61dc-44eb-860a-82cfbfe2c080&quot;&gt;&lt;/a&gt;&lt;span c
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="python" scheme="https://brantou.github.io/tags/python/"/>
    
      <category term="jieba" scheme="https://brantou.github.io/tags/jieba/"/>
    
      <category term="wordcloud" scheme="https://brantou.github.io/tags/wordcloud/"/>
    
  </entry>
  
  <entry>
    <title>scrapy模拟登陆知乎</title>
    <link href="https://brantou.github.io/2017/08/22/scrapy-crawl-zhihu/"/>
    <id>https://brantou.github.io/2017/08/22/scrapy-crawl-zhihu/</id>
    <published>2017-08-21T16:00:00.000Z</published>
    <updated>2017-08-23T07:21:47.933Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
折腾了将近两天，中间数次想要放弃，还好硬着头皮搞下去了，在此分享出来，希望有同等需求的各位能少走一些弯路。
源码放在了github上， 欢迎&lt;a href=&quot;https://github.com/brantou/crawler/blob/master/jobs/job
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="python" scheme="https://brantou.github.io/tags/python/"/>
    
      <category term="scrapy" scheme="https://brantou.github.io/tags/scrapy/"/>
    
      <category term="crawler" scheme="https://brantou.github.io/tags/crawler/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-array</title>
    <link href="https://brantou.github.io/2017/07/16/leetcode-array/"/>
    <id>https://brantou.github.io/2017/07/16/leetcode-array/</id>
    <published>2017-07-15T16:00:00.000Z</published>
    <updated>2017-09-21T15:14:03.666Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="leetcode" scheme="https://brantou.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode-tree</title>
    <link href="https://brantou.github.io/2017/07/16/leetcode-tree/"/>
    <id>https://brantou.github.io/2017/07/16/leetcode-tree/</id>
    <published>2017-07-15T16:00:00.000Z</published>
    <updated>2017-07-16T07:30:55.768Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;
&lt;i&gt;LeetCode&lt;/i&gt; 编程训练的积累，目前在努力做题中，日后整理！
&lt;/p&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="leetcode" scheme="https://brantou.github.io/tags/leetcode/"/>
    
      <category term="tree" scheme="https://brantou.github.io/tags/tree/"/>
    
  </entry>
  
  <entry>
    <title>在Org-mode中执行Go代码</title>
    <link href="https://brantou.github.io/2017/06/12/go-source-code-block-in-org/"/>
    <id>https://brantou.github.io/2017/06/12/go-source-code-block-in-org/</id>
    <published>2017-06-11T16:00:00.000Z</published>
    <updated>2017-12-24T15:05:38.642Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
在未使用 &lt;code&gt;org-mode&lt;/code&gt; 前，学习和实验Go的特性（例如 &lt;i&gt;context&lt;/i&gt; ）的步骤如下：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;打开终端
&lt;/li&gt;
&lt;li&gt;跳转到学习示例目录下
&lt;/li&gt;
&lt;li&gt;创建子
      
    
    </summary>
    
      <category term="org-mode" scheme="https://brantou.github.io/categories/org-mode/"/>
    
    
      <category term="tutorial" scheme="https://brantou.github.io/tags/tutorial/"/>
    
      <category term="org-mode" scheme="https://brantou.github.io/tags/org-mode/"/>
    
      <category term="babel" scheme="https://brantou.github.io/tags/babel/"/>
    
      <category term="active-code" scheme="https://brantou.github.io/tags/active-code/"/>
    
      <category term="literate-programming" scheme="https://brantou.github.io/tags/literate-programming/"/>
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>数组，切片：‘append’的机制</title>
    <link href="https://brantou.github.io/2017/05/24/go-array-slice-string/"/>
    <id>https://brantou.github.io/2017/05/24/go-array-slice-string/</id>
    <published>2017-05-24T03:00:00.000Z</published>
    <updated>2017-05-27T02:38:04.997Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;
编程语言最常见的特征之一是数组的概念。
数组看起来像简单的东西，但是在将它添加到语言中时，必须回答许多问题，例如：
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;固定的size，还是可变的size?&lt;/li&gt;
&lt;li&gt;size是类型的一部分吗?&lt;/li&gt;
&lt;li&gt;多维数组看起来是什么样子的？&lt;/li&gt;
&lt;li&gt;空数组代表了什么含义？&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
以上问题的如何解答，影响着数组在语言中的定位，仅仅是语言的特性还是其设计的核心部分。
&lt;/p&gt;

&lt;p&gt;
在Go的早期发展中，在设计感觉正确之前，花了大约一年时间来决定这些问题的答案。
关键的一步是引入了 &lt;i&gt;切片&lt;/i&gt; ，其建立在固定大小的数组之上，并提供灵活的，可扩展的数据结构。
不过，到目前为止，Go的新手经常会在 &lt;i&gt;切片&lt;/i&gt; 的工作方式上遇到问题，
也许是因为来自其他语言的经验使他们戴着有色眼镜来看待 &lt;i&gt;切片&lt;/i&gt; 。
&lt;/p&gt;

&lt;p&gt;
在这篇文章中，将尝试清除混淆。 将通过构建代码来解释 &lt;i&gt;append&lt;/i&gt; 内置函数的工作原理以及为什么它如此的工作。
&lt;/p&gt;
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="slice" scheme="https://brantou.github.io/tags/slice/"/>
    
  </entry>
  
  <entry>
    <title>Go的测试覆盖率</title>
    <link href="https://brantou.github.io/2017/05/24/go-cover-story/"/>
    <id>https://brantou.github.io/2017/05/24/go-cover-story/</id>
    <published>2017-05-24T03:00:00.000Z</published>
    <updated>2017-05-25T08:59:02.418Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
测试覆盖率是一个术语，用于统计通过运行程序包的测试多少代码得到执行。
如果执行测试套件导致80％的语句得到了运行，则测试覆盖率为80％。
&lt;/p&gt;

&lt;p&gt;
计算测试覆盖率的通常方法是埋点二进制可执行文件。
例如，GNU &lt;a href=&quot;http://gcc.gnu
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="测试覆盖率" scheme="https://brantou.github.io/tags/%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/"/>
    
      <category term="test" scheme="https://brantou.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Go的HTTP tracing</title>
    <link href="https://brantou.github.io/2017/05/24/go-http-trace/"/>
    <id>https://brantou.github.io/2017/05/24/go-http-trace/</id>
    <published>2017-05-23T16:00:00.000Z</published>
    <updated>2017-05-23T16:02:43.141Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
在Go 1.7中，引入了 &lt;i&gt;HTTP tracing&lt;/i&gt; ，这是在HTTP客户端请求的整个生命周期中收集细粒度信息的工具。
由 &lt;a href=&quot;https://golang.org/pkg/net/http/httptrace/&quot; rel=&quot;external
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="http-tracing" scheme="https://brantou.github.io/tags/http-tracing/"/>
    
  </entry>
  
  <entry>
    <title>Go的竞态探测器</title>
    <link href="https://brantou.github.io/2017/05/23/go-race-detector/"/>
    <id>https://brantou.github.io/2017/05/23/go-race-detector/</id>
    <published>2017-05-22T16:00:00.000Z</published>
    <updated>2017-05-23T14:17:24.738Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
&lt;i&gt;Race conditions&lt;/i&gt; 是最隐晦和难以捉摸的编程错误之一。
通常，在代码部署到生产之后很长时间才会发作，而且通常会导致很神秘的故障。
Go的并发机制使得编写干净并发代码变得容易，但它们并不能防止 /Race conditions/。
需要谨慎，勤
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="race-detector" scheme="https://brantou.github.io/tags/race-detector/"/>
    
      <category term="go-tool-chain" scheme="https://brantou.github.io/tags/go-tool-chain/"/>
    
  </entry>
  
  <entry>
    <title>Golang的并发模式：Context</title>
    <link href="https://brantou.github.io/2017/05/19/go-concurrency-patterns-context/"/>
    <id>https://brantou.github.io/2017/05/19/go-concurrency-patterns-context/</id>
    <published>2017-05-18T16:00:00.000Z</published>
    <updated>2017-05-23T07:30:52.995Z</updated>
    
    <summary type="html">
    
      
      
        

&lt;p&gt;
在go服务端，每个传入的 &lt;i&gt;request&lt;/i&gt; 都在自己的 &lt;code&gt;goroutine&lt;/code&gt; 中做后续处理。
&lt;i&gt;request handlers&lt;/i&gt; 经常启动其他 &lt;code&gt;goroutines&lt;/code&gt; 以访问后端，如数据库和rpc
      
    
    </summary>
    
      <category term="技术积累" scheme="https://brantou.github.io/categories/%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="golang" scheme="https://brantou.github.io/tags/golang/"/>
    
      <category term="context" scheme="https://brantou.github.io/tags/context/"/>
    
  </entry>
  
</feed>
